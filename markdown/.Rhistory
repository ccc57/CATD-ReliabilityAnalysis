legend('bottomright',c('SSE - random SSE', 'SD of SSE-random SSE'), col=c('blue', 'red'), lty=1)
xrange <- range(1:n.lev)
if (min(r.sse.min) < 0){
yrange <- range(log(r.sse.plus - min(r.sse.min)*1.05), log(r.sse.min - min(r.sse.min)*1.05))
} else {
yrange <- range(log(r.sse.plus), log(r.sse.min))
}
plot(xrange,yrange, type='n',xlab='Cluster Solution', ylab='Log of SSE - Random SSE', main='Cluster Solutions against (Log of SSE - Random SSE)')
lines(log(r.sse.m), type="b", col='blue')
lines(log(r.sse.plus), type='l', col='red')
lines(log(r.sse.min), type='l', col='red')
legend('bottomright',c('SSE - random SSE', 'SD of SSE-random SSE'), col=c('blue', 'red'), lty=1)
xrange <- range(1:n.lev)
yrange <- range(r.sse.plus,r.sse.min)
plot(xrange,yrange, type='n',xlab='Cluster Solution', ylab='SSE - Random SSE', main='Cluster Solutions against (SSE - Random SSE)')
lines(r.sse.m, type="b", col='blue')
lines(r.sse.plus, type='l', col='red')
lines(r.sse.min, type='l', col='red')
legend('bottomright',c('SSE - random SSE', 'SD of SSE-random SSE'), col = c('blue', 'red'), lty = 1)
cuts <- cutree(DA.clust, k = 2)
cuts
hclus_eval(t(DA), dist_m = 'binary', clus_m = 'ward.D', plot_op = T)
hclus_eval(t(DA), dist_m = 'binary', clus_m = 'ward.D2', plot_op = T)
hclus_eval(t(DA), dist_m = 'binary', clus_m = 'complete', plot_op = T)
clusplot(DA, cuts, color = TRUE, shade = TRUE, labels = 2, lines = 0,
main = "World Bank Two Cluster Plot, Ward's Method, First two PC", cex = .5)
clusplot(t(DA), cuts, color = TRUE, shade = TRUE, labels = 2, lines = 0,
main = "World Bank Two Cluster Plot, Ward's Method, First two PC", cex = .5)
plotcluster(t(DA), cuts, main = "Five Cluster Solution in DA Space",
xlab = "First Discriminant Function", ylab = "Second Discriminant Function", cex = .8)
plotcluster(t(DA), cuts, main = "Two Cluster Solution in DA Space",
xlab = "First Discriminant Function", ylab = "Second Discriminant Function", cex = .8)
clusplot(DA, cuts, color = TRUE, shade = TRUE, labels = 2, lines = 0,
main = "World Bank Two Cluster Plot, Ward's Method, First two PC", cex = .5)
?princomp
DA.pca <- princomp(DA, scores = TRUE)
View(DA.pca)
summary(DA.pca)
summary(DA.pca$loadings)
DA.pca <- princomp(DA, cor=TRUE, scores = TRUE)
summary(DA.pca$loadings)
summary(DA.pca)
names(DA.pca)
summary(DA.pca$scores)
DA.pca$scores
print(DA.pca$loadings, cutoff = 0, digits = 2)
?hclust
plotcluster(DA, cuts, main = "Two Cluster Solution in DA Space",
xlab = "First Discriminant Function", ylab = "Second Discriminant Function", cex = .8)
# Kmeans ------------------------------------------------------------------
km <- kmeans(t(DA),centers = 2)
names(km)
km$centers
km$cluster
library(aplpack)
library(fpc)
library(cluster)
library(ape)
library(dplyr)
library(amap)
library(ggplot2)
library(reshape2)
DA <-  read.csv("C:/Users/chris/OneDrive - Yale University/MultivariateStatistics/Data/brain_stroke.csv")
View(DA)
DA <- DA %>% mutate(ever_married = recode(ever_married, "Yes" = 1, "No" = 0)) %>%
mutate(urban = recode(Residence_type, "Urban" = 1, "Rural" = 0)) %>%
mutate(smoking_status = recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0)) %>%
mutate(gender = recode(gender, "Male" = 1, "Female" = 0)) %>%
filter(!is.na(smoking_status)) %>%
select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA <-  read.csv("C:/Users/chris/OneDrive - Yale University/MultivariateStatistics/Data/brain_stroke.csv")
DA <- DA %>% mutate(ever_married = recode(ever_married, "Yes" = 1, "No" = 0)) %>%
mutate(urban = recode(Residence_type, "Urban" = 1, "Rural" = 0)) %>%
filter(!is.na(smoking_status)) %>%
mutate(smoking_status = recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0)) %>%
mutate(gender = recode(gender, "Male" = 1, "Female" = 0)) %>%
select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA <-  read.csv("C:/Users/chris/OneDrive - Yale University/MultivariateStatistics/Data/brain_stroke.csv")
unique(DA$smoking_status)
DA <- DA %>% mutate(ever_married = recode(ever_married, "Yes" = 1, "No" = 0)) %>%
mutate(urban = recode(Residence_type, "Urban" = 1, "Rural" = 0)) %>%
mutate(smoking_status = recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0)) %>%
mutate(gender = recode(gender, "Male" = 1, "Female" = 0)) %>%
filter(!is.na(smoking_status)) %>%
select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
#Get distance matrix
DA.dist <- dist(t(DA), method = "binary")
#Plot distance matrix
plot_mtx(as.matrix(DA.dist))
?chart.Correlation
??chart.Correlation
library(PerformanceAnalytics)
chart.Correlation(DA)
chart.Correlation(DA[is.numeric(DA)])
chart.Correlation(DA[,is.numeric(DA)])
DA[,is.numeric(DA)]
DA[is.numeric(DA)]
DA[as.numeric(DA)]
chart.Correlation(DA[,is.numeric(DA[,-c("work_type")])])
DA_numeric <- DA[,-c("work_type")]
DA_numeric <- DA[-c("work_type")]
DA_numeric <- DA[-c(7)]
View(DA_numeric)
DA_numeric <- as.numeric(DA[-c(7)])
DA_numeric <- as.numeric(DA)
DA_numeric <- as.numeric(DA_numeric)
DA <- DA %>% mutate(ever_married = recode(ever_married, "Yes" = 1, "No" = 0)) %>%
mutate(urban = recode(Residence_type, "Urban" = 1, "Rural" = 0)) %>%
mutate(smoking_status = as.factor(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.factor(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(!is.na(smoking_status)) %>%
select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA <- DA_raw %>% mutate(ever_married = as.factor(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.factor(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.factor(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.factor(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(!is.na(smoking_status)) %>%
select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA_raw <-  read.csv("C:/Users/chris/OneDrive - Yale University/MultivariateStatistics/Data/brain_stroke.csv")
DA <- DA_raw %>% mutate(ever_married = as.factor(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.factor(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.factor(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.factor(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(!is.na(smoking_status)) %>%
select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA_numeric <- DA[-c(7)]
chart.Correlation(DA[,is.numeric()])
chart.Correlation(DA)
chart.Correlation(DA_numeric)
is.numeric(DA_numeric)
is.numeric(DA_numeric$stroke)
is.numeric(DA_numeric$gender)
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(!is.na(smoking_status)) %>%
select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA_numeric <- DA[-c(7)]
chart.Correlation(DA_numeric)
attr(DA$stroke, "label") <- "Stroke"
attr(DA_numeric$stroke, "label") <- "Stroke"
attr(DA_numeric$stroke, "label") <- "Stroke"
chart.Correlation(DA_numeric)
?chart.Correlation
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
mutate(avg_glucose_level = sqrt(avg_glucose_level)) %>%
filter(!is.na(smoking_status)) %>%
select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA_numeric <- DA[-c(7)]
library(car)
library(aplpack)
library(fpc)
library(cluster)
library(ape)
library(dplyr)
library(amap)
library(ggplot2)
library(reshape2)
library(PerformanceAnalytics)
library(MASS)
library(biotools)
library(klaR)
library(car)
library(dplyr)
library(lubridate)
library(ggExtra)
library(heplots)
library(readxl)
library(readr)
library(PerformanceAnalytics)
cqplot(DA_numeric)
chart.Correlation(DA_numeric)
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
mutate(avg_glucose_level = log(avg_glucose_level)) %>%
filter(!is.na(smoking_status)) %>%
select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
mutate(avg_glucose_level = log(avg_glucose_level)) %>%
filter(!is.na(smoking_status)) %>%
select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
library(dplyr)
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
mutate(avg_glucose_level = log(avg_glucose_level)) %>%
filter(!is.na(smoking_status)) %>%
select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA_raw <-  read.csv("C:/Users/chris/OneDrive - Yale University/MultivariateStatistics/Data/brain_stroke.csv")
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
mutate(avg_glucose_level = log(avg_glucose_level)) %>%
filter(!is.na(smoking_status)) %>%
select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
library(dplyr)
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
mutate(avg_glucose_level = log(avg_glucose_level)) %>%
filter(!is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
library(dplyr)
DA_raw <-  read.csv("C:/Users/chris/OneDrive - Yale University/MultivariateStatistics/Data/brain_stroke.csv")
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
mutate(avg_glucose_level = log(avg_glucose_level)) %>%
filter(!is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
library(aplpack)
library(fpc)
library(cluster)
library(ape)
library(amap)
library(ggplot2)
library(reshape2)
library(PerformanceAnalytics)
library(MASS)
library(biotools)
library(klaR)
library(car)
library(lubridate)
library(ggExtra)
library(heplots)
library(readxl)
library(readr)
library(PerformanceAnalytics)
library(dplyr)
DA_raw <-  read.csv("C:/Users/chris/OneDrive - Yale University/MultivariateStatistics/Data/brain_stroke.csv")
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
mutate(avg_glucose_level = log(avg_glucose_level)) %>%
filter(!is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
?recode
library(dplyr)
DA_raw <-  read.csv("C:/Users/chris/OneDrive - Yale University/MultivariateStatistics/Data/brain_stroke.csv")
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
mutate(avg_glucose_level = log(avg_glucose_level)) %>%
filter(!is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
library(aplpack)
library(fpc)
library(cluster)
library(ape)
library(amap)
library(ggplot2)
library(reshape2)
library(PerformanceAnalytics)
library(MASS)
library(biotools)
library(klaR)
# library(car)
library(lubridate)
library(ggExtra)
library(heplots)
library(readxl)
library(readr)
library(PerformanceAnalytics)
library(dplyr)
DA_raw <-  read.csv("C:/Users/chris/OneDrive - Yale University/MultivariateStatistics/Data/brain_stroke.csv")
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
mutate(avg_glucose_level = log(avg_glucose_level)) %>%
filter(!is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA_numeric <- DA[-c(7)]
cqplot(DA_numeric)
chart.Correlation(DA_numeric)
#Get distance matrix
DA.dist <- dist(t(DA), method = "binary")
#Plot distance matrix
plot_mtx(as.matrix(DA.dist))
plot_mtx <- function(Dx, main.title="Distance Matrix", xlab.title="Variable", ylab.title="Variable") {
data <- melt(Dx)
ggplot(data, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradientn(name="Euclidean Distance",
colours=c("#f2f0f7", "#cbc9e2", "#9e9ac8", "#6a51a3"),
limits=c(min(Dx), max(Dx))) +
xlab(xlab.title) +
ylab(ylab.title) +
theme_bw() +
ggtitle(main.title)
}
#Get distance matrix
DA.dist <- dist(t(DA), method = "binary")
#Plot distance matrix
plot_mtx(as.matrix(DA.dist))
4981 - 3481
colMeans(DA_numeric)
DA_raw <-  read.csv("C:/Users/chris/OneDrive - Yale University/MultivariateStatistics/Data/brain_stroke.csv")
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
colMeans(DA)
DA_numeric <- DA[-c(7)]
colMeans(DA)
colMeans(DA_numeric)
?manova
DA_in <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA_in <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA_ex <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(!is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA_in <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(!is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA_ex <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA_in$group <- 1
DA_in$group <- "in"
DA_ex$group <- "ex"
DA <- rbind(DA_in, DA_ex)
DA_numeric <- DA[-c(7)]
View(DA_numeric)
DA_numeric <- DA[-c(7, 9)]
ex.manova <- lm(DA_numeric[,-c("group")] ~ group, data = DA_numeric)
ex.manova <- lm(DA_numeric[,-c(10)] ~ group, data = DA_numeric)
colnames(DA_numeric)[1:9]
ex.manova <- lm(cbind(colnames(DA_numeric)[1:9]) ~ group, data = DA_numeric)
ex.manova <- lm(cbind(age, avg_glucose_level) ~ group, data = DA_numeric)
ex.manova <- lm(cbind(stroke, gender, age, hypertension, heart_disease, ever_married, avg_glucose_level, smoking_status, urban) ~ group, data = DA_numeric)
ex.manova <- lm(cbind(age, avg_glucose_level, bmi) ~ group, data = DA_numeric)
View(DA_raw)
DA_in <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(!is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA_ex <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
DA_in$group <- "in"
DA_ex$group <- "ex"
DA <- rbind(DA_in, DA_ex)
DA_numeric <- DA[-c(7, 9)]
View(DA_numeric)
View(DA)
DA_numeric <- DA[-c(7, 8)]
View(DA_numeric)
options(contrasts = c("contr.sum", "contr.poly"))
ex.manova <- lm(cbind(age, avg_glucose_level, bmi) ~ group, data = DA_numeric)
View(DA_numeric)
DA_numeric <- DA[-c(7, 10)]
ex.manova <- lm(cbind(age, avg_glucose_level, bmi) ~ group, data = DA_numeric)
summary(ex.manova)
summary(Anova(ex.manova, type = 3))
#Get distance matrix
DA.dist <- dist(t(DA), method = "binary")
#Plot distance matrix
plot_mtx(as.matrix(DA.dist))
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(!is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
#Get distance matrix
DA.dist <- dist(t(DA), method = "binary")
#Plot distance matrix
plot_mtx(as.matrix(DA.dist))
plot_mtx <- function(Dx, main.title="Distance Matrix", xlab.title="Variable", ylab.title="Variable") {
data <- melt(Dx)
ggplot(data, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradientn(name="Binary Distance",
colours=c("#f2f0f7", "#cbc9e2", "#9e9ac8", "#6a51a3"),
limits=c(min(Dx), max(Dx))) +
xlab(xlab.title) +
ylab(ylab.title) +
theme_bw() +
ggtitle(main.title)
}
#Get distance matrix
DA.dist <- dist(t(DA), method = "binary")
#Plot distance matrix
plot_mtx(as.matrix(DA.dist))
?scale_fill_gradient
#Perform cluster analysis
DA.clust <- hclust(DA.dist, method="ward.D")
#Get distance matrix
DA.dist <- dist(t(DA_numeric), method = "binary")
#Plot distance matrix
plot_mtx(as.matrix(DA.dist))
DA_raw <-  read.csv("C:/Users/chris/OneDrive - Yale University/MultivariateStatistics/Data/brain_stroke.csv")
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(!is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
pc1 <- princomp(DA_numeric, cor = T)
DA_raw <-  read.csv("C:/Users/chris/OneDrive - Yale University/MultivariateStatistics/Data/brain_stroke.csv")
DA <- DA_raw %>% mutate(ever_married = as.numeric(recode(ever_married, "Yes" = 1, "No" = 0))) %>%
mutate(urban = as.numeric(recode(Residence_type, "Urban" = 1, "Rural" = 0))) %>%
mutate(smoking_status = as.numeric(recode(smoking_status, "smokes" = 1, "formerly smoked" = 1, "never smoked" = 0))) %>%
mutate(gender = as.numeric(recode(gender, "Male" = 1, "Female" = 0))) %>%
filter(!is.na(smoking_status)) %>%
dplyr::select(-c("Residence_type")) %>%
relocate(stroke, .before = gender)
pc1 <- princomp(DA_numeric, cor = T)
DA_numeric <- DA[-c(7, 8)]
DA_numeric <- DA[-c(7)]
View(DA_numeric)
pc1 <- princomp(DA_numeric, cor = T)
pc1 <- princomp(DA_numeric, cor = F)
summary(pc1)
pc1 <- princomp(DA_numeric, cor = F)
pc1
install.packages("xtable")
install.packages("xtable")
library(xtable)
print.xtable(pc1, type="html", file="table.html")
pc1$loadings
pc1 <- princomp(DA_numeric, cor = F)
pc1$loadings
?princomp
print(pc1$loadings)
print(pc1$loadings, digits = 3)
print(pc1$loadings, digits = 2)
print(pc1$loadings, digits = 2, cutoff = 0)
print.xtable(pc1, type="html", file="table.html")
print.xtable(pc1$loadings, type="html", file="table.html")
data.frame(pc1$loadings)
data.frame.matrix(pc1$loadings)
as.data.frame(pc1$loadings)
as.data.frame(loadings(pc1))
as.data.frame.matrix(loadings(pc1))
as.data.frame.matrix(loadings(pc1, digits = 2, cutoff = 0))
pc.df <- as.data.frame.matrix(loadings(pc1, digits = 2, cutoff = 0))
View(pc.df)
round(pc.df, digits = 2)
pc.df <- round(as.data.frame.matrix(loadings(pc1)), digits = 2)
print.xtable(pc.df, type="html", file="table.html")
write.table(pc.df, 'pc1.csv')
write.table(pc.df, 'pc1.csv')
